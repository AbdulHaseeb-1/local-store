generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model categories {
  categoryId   BigInt     @id @default(autoincrement()) @db.UnsignedBigInt
  categoryName String     @db.VarChar(255)
  description  String?    @db.Text
  imageUrl     String     @db.VarChar(255)
  created_at   DateTime   @default(now()) @db.Timestamp(0)
  is_active    Boolean    @default(true)
  updated_ata  DateTime   @default(now()) @db.Timestamp(0)
  products     products[]
}

model customers {
  customer_id         BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  user_id             BigInt   @unique(map: "user_id")
  first_name          String   @db.VarChar(255)
  last_name           String   @db.VarChar(255)
  email               String   @unique(map: "email") @db.VarChar(100)
  phone_number        String?  @db.VarChar(13)
  shipping_address_id BigInt?
  billing_address_id  BigInt?
  is_active           Boolean? @default(true)
}

model images {
  image_id   BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  product_id BigInt?   @db.UnsignedBigInt
  image_url  String    @db.VarChar(255)
  products   products? @relation(fields: [product_id], references: [product_id], onDelete: Cascade, map: "images_ibfk_1")

  @@index([product_id], map: "product_id")
}

model order_items {
  order_item_id BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  order_id      BigInt   @db.UnsignedBigInt
  product_id    BigInt   @db.UnsignedBigInt
  quantity      Int      @default(1)
  unit_price    Decimal  @db.Decimal(10, 2)
  total_price   Decimal  @db.Decimal(10, 2)
  products      products @relation(fields: [product_id], references: [product_id], onUpdate: Restrict, map: "order_items_ibfk_1")
  orders        orders   @relation(fields: [order_id], references: [order_id], onDelete: Cascade, map: "order_items_ibfk_2")

  @@index([product_id], map: "product_id")
  @@index([order_id], map: "order_items_ibfk_2")
}

model orders {
  order_id         BigInt               @id @default(autoincrement()) @db.UnsignedBigInt
  customer         String               @db.VarChar(100)
  phone            String               @db.VarChar(11)
  total_amount     Decimal              @db.Decimal(10, 2)
  order_address_id BigInt?              @db.UnsignedBigInt
  order_status     orders_order_status? @default(Pending)
  paid             Boolean              @default(false)
  order_date       DateTime             @default(now()) @db.Timestamp(0)
  order_items      order_items[]
  order_address    order_address?       @relation(fields: [order_address_id], references: [order_address_id], onUpdate: SetNull, map: "orders_ibfk_1")

  @@index([order_address_id], map: "order_address_id")
}

model payment_methods {
  payment_method_id    BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  payment_method_name  String   @unique(map: "payment_method_name") @db.VarChar(255)
  description          String?  @db.Text
  payment_processor_id BigInt?
  is_active            Boolean? @default(true)
}

model products {
  product_id               BigInt                     @id @default(autoincrement()) @db.UnsignedBigInt
  product_title            String                     @db.VarChar(255)
  product_description      String                     @db.Text
  brand_name               String                     @db.VarChar(100)
  category_id              BigInt?                    @db.UnsignedBigInt
  purchase_price           Decimal                    @default(0.00) @db.Decimal(10, 2)
  selling_price            Decimal                    @default(0.00) @db.Decimal(10, 2)
  quantity                 Int                        @default(1)
  sold_count               Int                        @default(0) @db.UnsignedInt
  product_views            Int                        @default(0) @db.UnsignedInt
  is_active                Boolean                    @default(true)
  created_at               DateTime                   @default(now()) @db.Timestamp(0)
  updated_at               DateTime                   @default(now()) @db.Timestamp(0)
  is_featured              Boolean                    @default(false)
  admin_id                 BigInt
  stock_quantity           Int                        @default(0)
  images                   images[]
  order_items              order_items[]
  product_attribute_values product_attribute_values[]
  categories               categories?                @relation(fields: [category_id], references: [categoryId], onDelete: Cascade, map: "products_ibfk_1")

  @@index([category_id], map: "category_id")
}

model users {
  user_id           BigInt      @id @default(autoincrement())
  username          String      @db.VarChar(60)
  email             String      @unique(map: "email") @db.VarChar(255)
  password          String      @db.VarChar(255)
  registration_date DateTime    @default(now()) @db.DateTime(0)
  last_login_date   DateTime    @default(now()) @db.DateTime(0)
  is_active         Boolean     @default(true)
  role              users_role? @default(admin)
}

model order_address {
  order_address_id BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  city             String   @db.VarChar(100)
  state            String   @db.VarChar(100)
  address          String   @db.Text
  orders           orders[]
}

model product_attributes {
  attribute_id             BigInt                     @id @default(autoincrement()) @db.UnsignedBigInt
  attribute_name           String                     @unique(map: "attribute_name") @db.VarChar(50)
  product_attribute_values product_attribute_values[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model special_attributes {
  id            Int     @id @default(autoincrement()) @db.UnsignedTinyInt
  shipping_fee  Int?    @default(0) @db.UnsignedInt
  return_policy String? @db.Text
  delivery_info String? @db.VarChar(255)
}

model product_attribute_values {
  id                 BigInt             @id @default(autoincrement()) @db.UnsignedBigInt
  product_id         BigInt             @db.UnsignedBigInt
  attribute_id       BigInt             @db.UnsignedBigInt
  value              String             @db.VarChar(100)
  products           products           @relation(fields: [product_id], references: [product_id], onUpdate: Restrict, map: "product_attribute_values_ibfk_1")
  product_attributes product_attributes @relation(fields: [attribute_id], references: [attribute_id], onUpdate: Restrict, map: "product_attribute_values_ibfk_2")

  @@index([attribute_id], map: "attribute_id")
  @@index([product_id], map: "product_id")
}

model websitevisitors {
  VisitorID      Int       @id @default(autoincrement())
  IPAddress      String?   @db.VarChar(45)
  VisitTimestamp DateTime? @db.DateTime(0)
  PageVisited    String?   @db.VarChar(255)
  UserAgent      String?   @db.VarChar(255)
  Referrer       String?   @db.VarChar(255)
  DeviceType     String?   @db.VarChar(50)
}

enum users_role {
  admin
}

enum orders_order_status {
  Pending
  Confirmed
  Shipped
  Delivered
  Canceled
}
